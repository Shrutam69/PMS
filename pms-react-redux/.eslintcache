[{"D:\\Practice\\PMS\\pms-react-redux\\src\\index.js":"1","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Employee\\Employee.jsx":"2","D:\\Practice\\PMS\\pms-react-redux\\src\\reportWebVitals.js":"3","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Project\\Project.jsx":"4","D:\\Practice\\PMS\\pms-react-redux\\src\\App.js":"5","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Navigation.jsx":"6","D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\store.jsx":"7","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Dashboard.jsx":"8","D:\\Practice\\PMS\\pms-react-redux\\src\\utils\\constatnts.js":"9","D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\api.jsx":"10","D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\employee.js":"11","D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\project.js":"12","D:\\Practice\\PMS\\pms-react-redux\\src\\reducers\\project.js":"13","D:\\Practice\\PMS\\pms-react-redux\\src\\reducers\\combine.jsx":"14","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Employee\\EmployeeForm.jsx":"15","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Popup.js":"16","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\ConfirmDialog.js":"17","D:\\Practice\\PMS\\pms-react-redux\\src\\reducers\\employee.js":"18","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\TextError.jsx":"19","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\FormikControl.jsx":"20","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\DatePicker.jsx":"21","D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\skills.js":"22","D:\\Practice\\PMS\\pms-react-redux\\src\\reducers\\skills.js":"23","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Select.jsx":"24","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Project\\ProjectForm.jsx":"25","D:\\Practice\\PMS\\pms-react-redux\\src\\utils\\data.js":"26","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Input.jsx":"27"},{"size":500,"mtime":1608790967593,"results":"28","hashOfConfig":"29"},{"size":6105,"mtime":1611068098008,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1608790967593,"results":"31","hashOfConfig":"29"},{"size":6043,"mtime":1611062659778,"results":"32","hashOfConfig":"29"},{"size":608,"mtime":1610371086607,"results":"33","hashOfConfig":"29"},{"size":3411,"mtime":1610971723840,"results":"34","hashOfConfig":"29"},{"size":329,"mtime":1610359486290,"results":"35","hashOfConfig":"29"},{"size":392,"mtime":1610946753734,"results":"36","hashOfConfig":"29"},{"size":211,"mtime":1610943918960,"results":"37","hashOfConfig":"29"},{"size":421,"mtime":1610358340074,"results":"38","hashOfConfig":"29"},{"size":1500,"mtime":1611049700948,"results":"39","hashOfConfig":"29"},{"size":1583,"mtime":1610946853027,"results":"40","hashOfConfig":"29"},{"size":831,"mtime":1610946498191,"results":"41","hashOfConfig":"29"},{"size":314,"mtime":1610519991790,"results":"42","hashOfConfig":"29"},{"size":9696,"mtime":1611068380908,"results":"43","hashOfConfig":"29"},{"size":1266,"mtime":1610975897686,"results":"44","hashOfConfig":"29"},{"size":1851,"mtime":1610957237470,"results":"45","hashOfConfig":"29"},{"size":802,"mtime":1610862265255,"results":"46","hashOfConfig":"29"},{"size":154,"mtime":1610450177037,"results":"47","hashOfConfig":"29"},{"size":469,"mtime":1610515345380,"results":"48","hashOfConfig":"29"},{"size":915,"mtime":1611063733878,"results":"49","hashOfConfig":"29"},{"size":1557,"mtime":1610949257306,"results":"50","hashOfConfig":"29"},{"size":820,"mtime":1610862276004,"results":"51","hashOfConfig":"29"},{"size":754,"mtime":1610527110209,"results":"52","hashOfConfig":"29"},{"size":8974,"mtime":1611055268682,"results":"53","hashOfConfig":"29"},{"size":1381,"mtime":1611052956707,"results":"54","hashOfConfig":"29"},{"size":432,"mtime":1610450147481,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1u1uxhr",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Practice\\PMS\\pms-react-redux\\src\\index.js",[],["122","123"],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Employee\\Employee.jsx",["124","125"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from 'antd';\r\nimport {\r\n  ButtonGroup,\r\n  Button,\r\n  Toolbar,\r\n  TextField,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\nimport { tableHeaders } from '../../utils/data';\r\nimport * as actions from '../../actions/employee';\r\nimport { UserAddOutlined } from '@ant-design/icons';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport './employee.css';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Popup from '../Shared/Popup';\r\nimport EmployeeForm from './EmployeeForm';\r\nimport ConfirmDialog from '../Shared/ConfirmDialog';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport moment from 'moment';\r\n\r\nconst Employee = () => {\r\n  const { addToast } = useToasts();\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [recordForEdit, setRecordForEdit] = useState({});\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [confirmDialog, setConfirmDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    subTitle: '',\r\n  });\r\n  const employeeState = useSelector((state) => state.employeeReducer.list);\r\n  const dispatch = useDispatch();\r\n  const getEmployeeList = () => {\r\n    dispatch(actions.fetchAll());\r\n  };\r\n  useEffect(() => {\r\n    getEmployeeList();\r\n  }, [employeeState]);\r\n  const [searchResult, setSearchResult] = useState([...employeeState]);\r\n  useEffect(() => {\r\n    let dataAfterFilter = searchInput\r\n      ? employeeState.filter((x) =>\r\n          x.name.toLowerCase().includes(searchInput.toLowerCase())\r\n        )\r\n      : employeeState;\r\n    for (let i = 0; i < employeeState.length; i++) {\r\n      // let formattedStartDate = moment(dataAfterFilter[i].startDate).format(\r\n      //   'DD/MM/YYYY'\r\n      // );\r\n      // let formattedReleaseDate = moment(dataAfterFilter[i].releaseDate).format(\r\n      //   'DD/MM/YYYY'\r\n      // );\r\n      // dataAfterFilter[i].startDate = formattedStartDate;\r\n      // dataAfterFilter[i].releaseDate = formattedReleaseDate;\r\n      dataAfterFilter[i].startDate = new Date(\r\n        dataAfterFilter[i].startDate\r\n      ).toLocaleDateString();\r\n      dataAfterFilter[i].releaseDate = new Date(\r\n        dataAfterFilter[i].releaseDate\r\n      ).toLocaleDateString();\r\n    }\r\n    setSearchResult(dataAfterFilter);\r\n  }, [searchInput, employeeState]);\r\n  const openInPopup = (item) => {\r\n    setRecordForEdit(item);\r\n    setOpenPopup(true);\r\n  };\r\n  const onDelete = (id) => {\r\n    setConfirmDialog({\r\n      ...confirmDialog,\r\n      isOpen: false,\r\n    });\r\n    dispatch(\r\n      actions.Delete(id, () =>\r\n        addToast('Deleted Successfully', { appearance: 'info' })\r\n      )\r\n    );\r\n    setSearchResult(employeeState);\r\n  };\r\n  const actionColumn = {\r\n    title: 'Actions',\r\n    dataIndex: '',\r\n    key: 'actions',\r\n    render: (employee) => (\r\n      <ButtonGroup variant=\"text\">\r\n        <Button\r\n          onClick={() => {\r\n            openInPopup(employee);\r\n            // setRecordForEdit(employee);\r\n          }}\r\n        >\r\n          <EditIcon color=\"primary\" />\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setConfirmDialog({\r\n              isOpen: true,\r\n              title: 'Are you sure to delete employee?',\r\n              subTitle: \"You can't undo this operation\",\r\n              onConfirm: () => {\r\n                onDelete(employee.id);\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <DeleteIcon color=\"secondary\" />\r\n        </Button>\r\n      </ButtonGroup>\r\n    ),\r\n  };\r\n  const columns = [...tableHeaders, actionColumn];\r\n  return (\r\n    <>\r\n      <div className=\"row d-flex justify-content-between\">\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"ml-3 mt-2\"\r\n            style={{\r\n              height: '56px',\r\n              width: '100%',\r\n              backgroundColor: '#001529',\r\n            }}\r\n            onClick={() => {\r\n              setOpenPopup(true);\r\n              setRecordForEdit(null);\r\n            }}\r\n          >\r\n            <UserAddOutlined\r\n              style={{\r\n                fontSize: '22px',\r\n              }}\r\n            />\r\n            <span style={{ fontSize: '15px' }} className=\"ml-2\">\r\n              Add Employee\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        <div className=\"d-flex mt-2 mt-md-0\">\r\n          <div style={{ width: '100%' }} className=\"ml-2 mt-1 ml-md-0 mt-md-0\">\r\n            <Toolbar className=\"mt-1 pr-3\">\r\n              <TextField\r\n                fullWidth\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Search />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setSearchInput(e.target.value);\r\n                }}\r\n              />\r\n            </Toolbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"border\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={searchResult}\r\n          pagination={{\r\n            defaultPageSize: 5,\r\n            showSizeChanger: true,\r\n            pageSizeOptions: ['5', '10', '15'],\r\n            showQuickJumper: true,\r\n          }}\r\n          className=\"table-responsive\"\r\n        />\r\n      </div>\r\n      <Popup\r\n        title=\"Employee Form\"\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <EmployeeForm\r\n          recordForEdit={recordForEdit}\r\n          setOpenPopup={setOpenPopup}\r\n          currentId={currentId}\r\n          setCurrentId={setCurrentId}\r\n        />\r\n      </Popup>\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","D:\\Practice\\PMS\\pms-react-redux\\src\\reportWebVitals.js",[],["126","127"],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Project\\Project.jsx",["128","129","130","131"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { Table } from 'antd';\r\nimport {\r\n  ButtonGroup,\r\n  Button,\r\n  Toolbar,\r\n  TextField,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\nimport { tableHeadersProject, tableHeaders } from '../../utils/data';\r\nimport * as actions from '../../actions/project';\r\nimport { UserAddOutlined } from '@ant-design/icons';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport '../Employee/employee.css';\r\nimport Search from '@material-ui/icons/Search';\r\nimport Popup from '../Shared/Popup';\r\nimport ProjectForm from './ProjectForm';\r\nimport ConfirmDialog from '../Shared/ConfirmDialog';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport moment from 'moment';\r\n\r\nconst Project = (props) => {\r\n  const { addToast } = useToasts();\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const [recordForEdit, setRecordForEdit] = useState(null);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [confirmDialog, setConfirmDialog] = useState({\r\n    isOpen: false,\r\n    title: '',\r\n    subTitle: '',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const projectState = useSelector((state) => state.projectReducer.list);\r\n  const getProjectList = () => {\r\n    dispatch(actions.fetchAll());\r\n  };\r\n  useEffect(() => {\r\n    getProjectList();\r\n  }, []);\r\n  const [searchResult, setSearchResult] = useState([...projectState]);\r\n  useEffect(() => {\r\n    setSearchResult([...projectState]);\r\n  }, []);\r\n  useEffect(() => {\r\n    let dataAfterFilter = searchInput\r\n      ? projectState.filter((x) =>\r\n          x.name.toLowerCase().includes(searchInput.toLowerCase())\r\n        )\r\n      : projectState;\r\n    for (let i = 0; i < dataAfterFilter.length; i++) {\r\n      let formattedStartDate = moment(dataAfterFilter[i].startDate).format(\r\n        'DD-MM-YYYY'\r\n      );\r\n      let formattedEndDate = moment(dataAfterFilter[i].startDate).format(\r\n        'DD-MM-YYYY'\r\n      );\r\n      dataAfterFilter[i].startDate = formattedStartDate;\r\n      dataAfterFilter[i].endDate = formattedEndDate;\r\n      // dataAfterFilter[i].startDate = new Date(\r\n      //   dataAfterFilter[i].startDate\r\n      // ).toLocaleDateString();\r\n      // dataAfterFilter[i].endDate = new Date(\r\n      //   dataAfterFilter[i].endDate\r\n      // ).toLocaleDateString();\r\n    }\r\n    setSearchResult(dataAfterFilter);\r\n  }, [searchInput, projectState]);\r\n  const openInPopup = (item) => {\r\n    setRecordForEdit(item);\r\n    setOpenPopup(true);\r\n  };\r\n  const onDelete = (id) => {\r\n    setConfirmDialog({\r\n      ...confirmDialog,\r\n      isOpen: false,\r\n    });\r\n    dispatch(\r\n      actions.Delete(id, () =>\r\n        addToast('Deleted Successfully', { appearance: 'info' })\r\n      )\r\n    );\r\n  };\r\n  const actionColumn = {\r\n    title: 'Actions',\r\n    dataIndex: '',\r\n    key: 'actions',\r\n    render: (project) => (\r\n      <ButtonGroup variant=\"text\">\r\n        <Button\r\n          onClick={() => {\r\n            // setOpenPopup(true);\r\n            openInPopup(project);\r\n          }}\r\n        >\r\n          <EditIcon color=\"primary\" />\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setConfirmDialog({\r\n              isOpen: true,\r\n              title: 'Are you sure to delete project?',\r\n              subTitle: \"You can't undo this operation\",\r\n              onConfirm: () => {\r\n                onDelete(project.id);\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <DeleteIcon color=\"secondary\" />\r\n        </Button>\r\n      </ButtonGroup>\r\n    ),\r\n  };\r\n  const columns = [...tableHeadersProject, actionColumn];\r\n  return (\r\n    <>\r\n      <div className=\"row d-flex justify-content-between\">\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            className=\"ml-3 mt-2\"\r\n            style={{\r\n              height: '56px',\r\n              width: '100%',\r\n              backgroundColor: '#001529',\r\n            }}\r\n            onClick={() => {\r\n              setOpenPopup(true);\r\n              setRecordForEdit(null);\r\n            }}\r\n          >\r\n            <UserAddOutlined\r\n              style={{\r\n                fontSize: '22px',\r\n              }}\r\n            />\r\n            <span style={{ fontSize: '15px' }} className=\"ml-2\">\r\n              Add Project\r\n            </span>\r\n          </Button>\r\n        </div>\r\n        <div className=\"d-flex mt-2 mt-md-0\">\r\n          <div style={{ width: '100%' }} className=\"ml-2 mt-1 ml-md-0 mt-md-0\">\r\n            <Toolbar className=\"mt-1 pr-3\">\r\n              <TextField\r\n                fullWidth\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Search />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setSearchInput(e.target.value);\r\n                }}\r\n              />\r\n            </Toolbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"border\">\r\n        <Table\r\n          columns={columns}\r\n          dataSource={searchResult}\r\n          pagination={{\r\n            defaultPageSize: 5,\r\n            showSizeChanger: true,\r\n            pageSizeOptions: ['5', '10', '15'],\r\n            showQuickJumper: true,\r\n          }}\r\n          className=\"table-responsive\"\r\n        />\r\n      </div>\r\n\r\n      <Popup\r\n        title=\"Project Form\"\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <ProjectForm\r\n          recordForEdit={recordForEdit}\r\n          openPopup={openPopup}\r\n          setOpenPopup={setOpenPopup}\r\n        />\r\n      </Popup>\r\n      <ConfirmDialog\r\n        confirmDialog={confirmDialog}\r\n        setConfirmDialog={setConfirmDialog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","D:\\Practice\\PMS\\pms-react-redux\\src\\App.js",["132","133"],"import Employee from './components/Employee/Employee.jsx';\nimport Project from './components/Project/Project';\nimport Navingation from './components/Shared/Navigation.jsx';\nimport { Provider } from 'react-redux';\nimport { store } from './actions/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport { ToastProvider } from 'react-toast-notifications';\n\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <ToastProvider autoDismiss={true}>\n          <Navingation />\n        </ToastProvider>\n      </Provider>\n    </>\n  );\n};\n\nexport default App;\n",["134","135"],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Navigation.jsx",["136","137"],"import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n} from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\nimport Employee from '../Employee/Employee';\r\nimport Dashboard from '../Shared/Dashboard';\r\nimport Project from '../Project/Project';\r\nimport { HomeOutlined, ProjectOutlined, TeamOutlined } from '@ant-design/icons';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PMS_logo from '../../assets/images/pms_new_logo.png';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst Navingation = () => {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider collapsible>\r\n            <div className=\"logo\" />\r\n            <Menu\r\n              theme=\"dark\"\r\n              defaultSelectedKeys={['1']}\r\n              mode=\"inline\"\r\n              className=\"mt-5 pt-2\"\r\n            >\r\n              <br></br>\r\n              <Menu.Item\r\n                key=\"1\"\r\n                className=\"mt-2\"\r\n                icon={<HomeOutlined style={{ fontSize: '20px' }} />}\r\n              >\r\n                Dashboard\r\n                <NavLink to=\"/\" />\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"2\"\r\n                icon={<TeamOutlined style={{ fontSize: '20px' }} />}\r\n              >\r\n                <span>Employee</span>\r\n                <NavLink to=\"/employee\" />\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"3\"\r\n                icon={<ProjectOutlined style={{ fontSize: '20px' }} />}\r\n              >\r\n                <span>Project</span>\r\n                <NavLink to=\"/project\" />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n            <Header\r\n              className=\"site-layout-background d-flex justify-content-between\"\r\n              style={{ padding: 0, color: 'white' }}\r\n            >\r\n              <NavLink to=\"/\">\r\n                <h4 className=\"text-light\">\r\n                  {/* PMS */}\r\n                  <img style={{ height: '46px' }} src={PMS_logo} />\r\n                  {/* <hr className=\"text-light bg-light p-0 m-1\" /> */}\r\n                  <div\r\n                    style={{ fontSize: '9px', backgroundColor: 'white' }}\r\n                    className=\"text-dark py-1\"\r\n                  >\r\n                    Project Management System\r\n                  </div>\r\n                </h4>\r\n              </NavLink>\r\n              <div className=\"text-light mr-4 \">\r\n                <div className=\"d-flex\">\r\n                  <div className=\"m-2 pt-1\">\r\n                    <Avatar sizes=\"sm\">S</Avatar>\r\n                  </div>\r\n                  <div className=\"mb-1\">Shrutam</div>\r\n                </div>\r\n              </div>\r\n            </Header>\r\n\r\n            <Content\r\n              style={{\r\n                margin: '24px 16px',\r\n                padding: 24,\r\n                background: '#f4f5fd',\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              <Route exact path=\"/\" component={Dashboard} />\r\n              <Route exact path=\"/employee\" component={Employee} />\r\n              <Route path=\"/project\" component={Project} />\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}></Footer>\r\n          </Layout>\r\n        </Layout>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navingation;\r\n",["138","139"],"D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\store.jsx",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Dashboard.jsx",["140","141","142","143","144","145"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../actions/project';\r\nimport * as actionsEmployee from '../../actions/employee';\r\nimport * as actionsSkills from '../../actions/skills';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <>\r\n      <div>Dashboard</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Practice\\PMS\\pms-react-redux\\src\\utils\\constatnts.js",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\api.jsx",["146"],"import axios from 'axios';\r\nimport { BASE_URL } from '../utils/constatnts';\r\n\r\nexport default {\r\n  actions(url = BASE_URL) {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: (id) => axios.get(url + id),\r\n      create: (newRecord) => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n    };\r\n  },\r\n};\r\n","D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\employee.js",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\project.js",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\reducers\\project.js",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\reducers\\combine.jsx",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Employee\\EmployeeForm.jsx",["147","148"],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Popup.js",["149","150"],"import React from 'react';\nimport { Dialog, DialogContent, Button } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport default function Popup(props) {\n  const { title, children, openPopup, setOpenPopup } = props;\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [fullWidth, setFullWidth] = React.useState(true);\n\n  return (\n    <Dialog open={openPopup} maxWidth={maxWidth} fullWidth={fullWidth}>\n      <div className=\"pr-0 pl-3 py-3\">\n        <div className=\"d-flex justify-content-between\">\n          <div style={{ fontSize: '24px' }}>\n            <strong>{title}</strong>\n          </div>\n          <Button\n            onClick={() => {\n              setOpenPopup(false);\n            }}\n            style={{ outline: 'none', backgroundColor: 'white' }}\n          >\n            <CloseIcon\n              style={{\n                border: '1px solid lightgray',\n                borderRadius: '50%',\n                color: 'lightgray',\n              }}\n            />\n          </Button>\n        </div>\n        <hr\n          className=\"mx-1 p-0 mr-4 m-0\"\n          style={{ borderBottom: '4px solid #208fc8 ' }}\n        />\n      </div>\n      <DialogContent className=\"px-3\">{children}</DialogContent>\n    </Dialog>\n  );\n}\n","D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\ConfirmDialog.js",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\reducers\\employee.js",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\TextError.jsx",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\FormikControl.jsx",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\DatePicker.jsx",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\actions\\skills.js",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\reducers\\skills.js",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Select.jsx",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Project\\ProjectForm.jsx",["151","152","153","154","155","156","157","158"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormikControl from '../Shared/FormikControl';\r\nimport { Button } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport '../Employee/employee.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport * as actions from '../../actions/project';\r\nimport * as skillsactions from '../../actions/skills';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst ProjectForm = (props) => {\r\n  const { addToast } = useToasts();\r\n  const {\r\n    addOrEdit,\r\n    recordForEdit,\r\n    openPopup,\r\n    setOpenPopup,\r\n    setRecordForEdit,\r\n  } = props;\r\n  const skillsState = useSelector((state) => state.skillsReducer.list);\r\n  const dispatch = useDispatch();\r\n  const getSkillsList = () => {\r\n    dispatch(skillsactions.fetchAll());\r\n  };\r\n  useEffect(() => {\r\n    getSkillsList();\r\n  }, []);\r\n  const skilllist = skillsState.map((data, index) => {\r\n    return { value: data.id, label: data.name };\r\n  });\r\n\r\n  const initialFieldValues = {\r\n    id: 0,\r\n    name: '',\r\n    code: '',\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    SelectedSkillList: [],\r\n  };\r\n  const [values, setValues] = useState(\r\n    recordForEdit ? recordForEdit : initialFieldValues\r\n  );\r\n  const [data, setData] = useState([recordForEdit]);\r\n  //Validation\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string()\r\n      .trim()\r\n      .required('This field is required')\r\n      .min(3, 'Mininum 3 characters allowed')\r\n      .max(15, 'Maximum 15 characters allowed'),\r\n    code: Yup.string().trim().required('This field is required'),\r\n  });\r\n  useEffect(() => {\r\n    debugger;\r\n    if (recordForEdit != null)\r\n      setValues({\r\n        ...data,\r\n      });\r\n  }, [recordForEdit]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const onSelect = (data) => {\r\n    let newdata = data?.map((test) => {\r\n      return test.value;\r\n    });\r\n    setValues({\r\n      ...values,\r\n      SelectedSkillList: newdata,\r\n    });\r\n  };\r\n\r\n  const onRemove = (data) => {\r\n    setValues({\r\n      ...values,\r\n      SelectedSkillList: data,\r\n    });\r\n  };\r\n  //Submit Event\r\n  const onSubmit = (values) => {\r\n    debugger;\r\n    if (recordForEdit == null) {\r\n      dispatch(\r\n        actions.create(\r\n          values,\r\n          addToast('Project Added Successfully', { appearance: 'success' })\r\n        )\r\n      );\r\n      setOpenPopup(false);\r\n    } else {\r\n      dispatch(\r\n        actions.update(\r\n          recordForEdit.id,\r\n          values,\r\n          addToast('Project Updated Successfully', { appearance: 'success' })\r\n        )\r\n      );\r\n      setOpenPopup(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"p-2\">\r\n        <div>\r\n          <Formik\r\n            initialValues={values}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n            enableReinitialize\r\n          >\r\n            {({ errors, touched, values }) => {\r\n              return (\r\n                <Form autoComplete=\"off\" noValidate>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-3 d-flex justify-content-sm-start justify-content-md-end pt-1 pr-0\">\r\n                      <label>\r\n                        Name <span className=\"text-danger\">*</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-sm-9\">\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        className={\r\n                          errors.name && touched.name ? 'err-field' : 'field'\r\n                        }\r\n                        onKeyDown={(e) =>\r\n                          e.keyCode > 48 && e.keyCode < 57 && e.preventDefault()\r\n                        }\r\n                        value={values?.name}\r\n                        onChange={handleInputChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-3 d-flex justify-content-sm-start justify-content-md-end pt-1 pr-0\">\r\n                      <label>\r\n                        Code<span className=\"text-danger\">*</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"col-sm-9\">\r\n                      <FormikControl\r\n                        control=\"input\"\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        className={\r\n                          errors.code && touched.code ? 'err-field' : 'field'\r\n                        }\r\n                        value={values?.code}\r\n                        onChange={handleInputChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-3 d-flex justify-content-sm-start justify-content-md-end pt-1 pr-0\">\r\n                      <label>Skills</label>\r\n                    </div>\r\n                    <div className=\"col-sm-9\">\r\n                      <Select\r\n                        isMulti\r\n                        name=\"SelectedSkillList\"\r\n                        options={skilllist}\r\n                        className=\"basic-multi-select\"\r\n                        // className={\r\n                        //   errors.code && touched.code\r\n                        //     ? 'err-field basic-multi-select'\r\n                        //     : 'field basic-multi-select'\r\n                        // }\r\n                        classNamePrefix=\"select\"\r\n                        // onSelect={onSelect}\r\n                        onRemove={onRemove}\r\n                        onChange={onSelect}\r\n                        // value={values.SelectedSkillList}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-3 d-flex justify-content-sm-start justify-content-md-end pt-1 pr-0\">\r\n                      <label>Start Date</label>\r\n                    </div>\r\n                    <div className=\"col-sm-9\">\r\n                      <FormikControl\r\n                        control=\"date\"\r\n                        name=\"startDate\"\r\n                        className={\r\n                          errors.startDate && touched.startDate\r\n                            ? 'err-field'\r\n                            : 'field'\r\n                        }\r\n                        value={values?.startDate}\r\n                        // onChange={(date) => setStartDate(date)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-3 d-flex justify-content-sm-start justify-content-md-end pt-1 pr-0\">\r\n                      <label>End Date</label>\r\n                    </div>\r\n                    <div className=\"col-sm-9\">\r\n                      <FormikControl\r\n                        control=\"date\"\r\n                        name=\"endDate\"\r\n                        className=\"field\"\r\n                        value={values?.endDate}\r\n                        // onChange={(date) => setReleaseDate(date)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex justify-content-end mt-3\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ padding: '6px 12px' }}\r\n                      className=\"btn-save\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      startIcon={<CloseIcon />}\r\n                      className=\"btn-cancel ml-2\"\r\n                      style={{ padding: '6px 12px' }}\r\n                      onClick={() => {\r\n                        setOpenPopup(false);\r\n                        // setRecordForEdit(null);\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","D:\\Practice\\PMS\\pms-react-redux\\src\\utils\\data.js",[],"D:\\Practice\\PMS\\pms-react-redux\\src\\components\\Shared\\Input.jsx",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":22,"column":8,"nodeType":"165","messageId":"166","endLine":22,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":42,"column":6,"nodeType":"169","endLine":42,"endColumn":21,"suggestions":"170"},{"ruleId":"159","replacedBy":"171"},{"ruleId":"161","replacedBy":"172"},{"ruleId":"163","severity":1,"message":"173","line":2,"column":36,"nodeType":"165","messageId":"166","endLine":2,"endColumn":43},{"ruleId":"163","severity":1,"message":"174","line":11,"column":31,"nodeType":"165","messageId":"166","endLine":11,"endColumn":43},{"ruleId":"167","severity":1,"message":"175","line":42,"column":6,"nodeType":"169","endLine":42,"endColumn":8,"suggestions":"176"},{"ruleId":"167","severity":1,"message":"177","line":46,"column":6,"nodeType":"169","endLine":46,"endColumn":8,"suggestions":"178"},{"ruleId":"163","severity":1,"message":"179","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":16},{"ruleId":"163","severity":1,"message":"180","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":15},{"ruleId":"159","replacedBy":"181"},{"ruleId":"161","replacedBy":"182"},{"ruleId":"163","severity":1,"message":"183","line":5,"column":3,"nodeType":"165","messageId":"166","endLine":5,"endColumn":7},{"ruleId":"184","severity":1,"message":"185","line":63,"column":19,"nodeType":"186","endLine":63,"endColumn":68},{"ruleId":"159","replacedBy":"187"},{"ruleId":"161","replacedBy":"188"},{"ruleId":"163","severity":1,"message":"189","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"190","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":21},{"ruleId":"163","severity":1,"message":"191","line":2,"column":23,"nodeType":"165","messageId":"166","endLine":2,"endColumn":34},{"ruleId":"163","severity":1,"message":"192","line":3,"column":13,"nodeType":"165","messageId":"166","endLine":3,"endColumn":20},{"ruleId":"163","severity":1,"message":"193","line":4,"column":13,"nodeType":"165","messageId":"166","endLine":4,"endColumn":28},{"ruleId":"163","severity":1,"message":"194","line":5,"column":13,"nodeType":"165","messageId":"166","endLine":5,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":4,"column":1,"nodeType":"197","endLine":14,"endColumn":3},{"ruleId":"163","severity":1,"message":"164","line":15,"column":8,"nodeType":"165","messageId":"166","endLine":15,"endColumn":14},{"ruleId":"167","severity":1,"message":"198","line":28,"column":6,"nodeType":"169","endLine":28,"endColumn":8,"suggestions":"199"},{"ruleId":"163","severity":1,"message":"200","line":7,"column":20,"nodeType":"165","messageId":"166","endLine":7,"endColumn":31},{"ruleId":"163","severity":1,"message":"201","line":8,"column":21,"nodeType":"165","messageId":"166","endLine":8,"endColumn":33},{"ruleId":"163","severity":1,"message":"202","line":9,"column":8,"nodeType":"165","messageId":"166","endLine":9,"endColumn":18},{"ruleId":"163","severity":1,"message":"203","line":11,"column":10,"nodeType":"165","messageId":"166","endLine":11,"endColumn":21},{"ruleId":"163","severity":1,"message":"204","line":21,"column":5,"nodeType":"165","messageId":"166","endLine":21,"endColumn":14},{"ruleId":"163","severity":1,"message":"205","line":23,"column":5,"nodeType":"165","messageId":"166","endLine":23,"endColumn":14},{"ruleId":"163","severity":1,"message":"206","line":25,"column":5,"nodeType":"165","messageId":"166","endLine":25,"endColumn":21},{"ruleId":"167","severity":1,"message":"198","line":34,"column":6,"nodeType":"169","endLine":34,"endColumn":8,"suggestions":"207"},{"ruleId":"163","severity":1,"message":"208","line":50,"column":16,"nodeType":"165","messageId":"166","endLine":50,"endColumn":23},{"ruleId":"167","severity":1,"message":"209","line":66,"column":6,"nodeType":"169","endLine":66,"endColumn":21,"suggestions":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEmployeeList'. Either include it or remove the dependency array.","ArrayExpression",["213"],["211"],["212"],"'connect' is defined but never used.","'tableHeaders' is defined but never used.","React Hook useEffect has a missing dependency: 'getProjectList'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'projectState'. Either include it or remove the dependency array.",["215"],"'Employee' is defined but never used.","'Project' is defined but never used.",["211"],["212"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["211"],["212"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'actions' is defined but never used.","'actionsEmployee' is defined but never used.","'actionsSkills' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'getSkillsList'. Either include it or remove the dependency array.",["216"],"'setMaxWidth' is assigned a value but never used.","'setFullWidth' is assigned a value but never used.","'DatePicker' is defined but never used.","'Multiselect' is defined but never used.","'addOrEdit' is assigned a value but never used.","'openPopup' is assigned a value but never used.","'setRecordForEdit' is assigned a value but never used.",["217"],"'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValues' needs the current value of 'data'.",["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"225","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [employeeState, getEmployeeList]",{"range":"230","text":"231"},"Update the dependencies array to be: [getProjectList]",{"range":"232","text":"233"},"Update the dependencies array to be: [projectState]",{"range":"234","text":"235"},"Update the dependencies array to be: [getSkillsList]",{"range":"236","text":"237"},{"range":"238","text":"237"},"Update the dependencies array to be: [data, recordForEdit]",{"range":"239","text":"240"},[1446,1461],"[employeeState, getEmployeeList]",[1437,1439],"[getProjectList]",[1582,1584],"[projectState]",[1028,1030],"[getSkillsList]",[1198,1200],[2069,2084],"[data, recordForEdit]"]